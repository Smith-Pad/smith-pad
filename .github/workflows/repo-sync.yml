name: Repository Sync with MCP

on:
  schedule:
    - cron: '0 */6 * * *'  # Runs every 6 hours
  workflow_dispatch:  # Allows manual triggering

jobs:
  sync-repositories:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout smith-pad
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          # Configure Git to handle different authentication methods
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.CODEBERG_TOKEN }}@codeberg.org/".insteadOf "https://codeberg.org/"

      - name: Clone and sync repositories
        run: |
          # Create a directory for cloned repositories
          mkdir -p sub-repos
          
          # Function to clone or update a repository
          clone_or_update_repo() {
            local repo_url=$1
            local repo_name=$(basename "$repo_url" .git)
            local repo_path="sub-repos/$repo_name"
            
            echo "Processing repository: $repo_name"
            
            if [ -d "$repo_path" ]; then
              echo "Updating existing repository: $repo_name"
              cd "$repo_path"
              git fetch --all
              git reset --hard origin/main || git reset --hard origin/master
              cd ../..
            else
              echo "Cloning new repository: $repo_name"
              git clone "$repo_url" "$repo_path"
            fi
            
            # Verify the repository was cloned/updated successfully
            if [ ! -d "$repo_path/.git" ]; then
              echo "Error: Failed to clone/update $repo_name"
              exit 1
            fi
          }
          
          # Clone or update each repository
          echo "Starting repository sync process..."
          
          # GitHub repositories
          clone_or_update_repo "https://github.com/smith-pad/osui.git"
          clone_or_update_repo "https://github.com/smith-pad/subjects.git"
          
          # Codeberg repository
          clone_or_update_repo "https://codeberg.org/smith-pad/smith-pad-os"
          
          echo "Repository sync completed successfully"
          
          # Commit and push changes
          git add sub-repos/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync sub-repositories [skip ci]"
            git push
          fi

      - name: Handle MCP Integration
        run: |
          # Add MCP-specific commands here
          # This could include:
          # - Setting up MCP environment
          # - Running MCP commands
          # - Processing MCP output 